#!/bin/sh
# SPDX-License-Identifier: GPL-2.0-only OR GPL-3.0-only OR LicenseRef-KDE-Accepted-GPL
# SPDX-FileCopyrightText: 2023 Harald Sitter <sitter@kde.org>

# NOTE: this runs outside the chroot!
# Mangle subvol setup from calamares to systemd conforming lineup.

set -ex

ROOT=$1
[ "$ROOT" = "" ] && exit 1

device=$(findmnt --noheadings --nofsroot --output SOURCE "$ROOT")
[ "$device" = "" ] && exit 1

. /etc/os-release

tmpdir=$(mktemp --directory)

# Calamares likes to mount stuff even with an empty config. Throw it away again.
cd "$ROOT"
umount -R ./*
rm -rfv ./*

mount -o ro /dev/gpt-auto-root /system
mount -o rw,compress=zstd:1 "$device" "$tmpdir"
cd "$tmpdir"
rm -rfv ./*

btrfs quota enable --simple .
btrfs send "/system/@kdeos_$IMAGE_VERSION" | btrfs receive .
btrfs subvolume create @home
btrfs subvolume create @root
btrfs subvolume create @locale
btrfs subvolume create @snap
btrfs subvolume create @var-overlay
btrfs subvolume create @etc-overlay
mkdir @var-overlay/upper @var-overlay/work @etc-overlay/upper @etc-overlay/work

# Overmount calamares' mount with the subvol mount
umount -R "$ROOT"
mount -o "subvol=@kdeos_$IMAGE_VERSION" "$device" "$ROOT"
mount -t proc proc "$ROOT/proc"
mount -t sysfs sys "$ROOT/sys"
mount -o bind /dev "$ROOT/dev"
mount -t tmpfs tmpfs "$ROOT/run"
mkdir "$ROOT/run/udev"
mount -o bind /run/udev "$ROOT/run/udev"
mount -t efivarfs efivarfs "$ROOT/sys/firmware/efi/efivars"
_kdeos-overlay "$device" "$ROOT"

# ESP is a bit tricky. Find the block device of the root partition and then we'll ask systemd for an ESP on that device.
# ... and luks devices are even more tricky because we need to get the real device first
realdevice=$(realpath --relative-to /dev "$device")
if [ -r "/sys/block/$realdevice/dm/" ]; then
    for slave in /sys/block/"$realdevice"/slaves/*; do
        realdevice=$(basename "$slave")
        break
    done
fi
blockdev=/dev/$(basename "$(readlink --canonicalize "/sys/class/block/$realdevice/..")")
espdev=$(_kdeos-find-esp "$blockdev")
mount "$espdev" "$ROOT/efi"
