# SPDX-License-Identifier: BSD-2-Clause
# SPDX-FileCopyrightText: None

stages:
  - start

imaging:
  stage: start
  tags:
    - x86_64-image
  rules:
    - if: $CI_COMMIT_REF_PROTECTED != 'true' || $CI_DEFAULT_BRANCH != $CI_COMMIT_REF_NAME || $CI_PROJECT_PATH != 'kde-linux/kde-linux'
      when: always
  allow_failure: false
  image: archlinux:latest
  variables: &variables
    RUNNER_AFTER_SCRIPT_TIMEOUT: 1h
  script:
    - ./in_docker.sh --force --debug
  after_script:
    # Upload all images to Harald. You can grab them at http://images.kde-linux.haraldsitter.eu/
    - ./upload-to-harald.sh || true
    # Cleanup our btrfs subvolumes so docker doesn't stumble over them.
    - cargo run --manifest-path btrfs-cleanup/Cargo.toml .

imaging+publish:
  stage: start
  tags:
    - x86_64-image+publish
  rules:
    # NOTE: these are different from the regular imaging job!
    - if: $CI_COMMIT_REF_PROTECTED == 'true' && $CI_DEFAULT_BRANCH == $CI_COMMIT_REF_NAME && $CI_PROJECT_PATH == 'kde-linux/kde-linux'
      when: always
  allow_failure: false
  image: archlinux:latest
  variables: *variables
  script:
    - pacman --sync --refresh --noconfirm curl which git
    - curl -s https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer | bash
    - ./in_docker.sh --force --debug
    - ./upload.sh
  after_script:
    # Upload broken images to Harald for inspection
    - "[ $CI_JOB_STATUS == 'success' ] || ./upload-to-harald.sh || true"
    # Cleanup our btrfs subvolumes so docker doesn't stumble over them.
    - cargo run --manifest-path btrfs-cleanup/Cargo.toml .
