#!/bin/bash
# SPDX-License-Identifier: GPL-2.0-only OR GPL-3.0-only OR LicenseRef-KDE-Accepted-GPL
# SPDX-FileCopyrightText: 2023 Harald Sitter <sitter@kde.org>

set -ex

env

mkdir --mode 0700 /system # for the kde-linux-overlay.service
mkdir /snap               # for snapd (will get a subvolume mounted into that snapd then mounts the snaps into)

export SYSTEMD_ESP_PATH="$BOOT_MNT"
mkdir --parents --mode 0700 "$SYSTEMD_ESP_PATH"
bootctl install
echo 'timeout 5' >> "$SYSTEMD_ESP_PATH/loader/loader.conf"
cp /usr/share/edk2-shell/x64/Shell.efi "$SYSTEMD_ESP_PATH/shellx64.efi"

# Meanwhile cleanup a bit
## Unnecessary for us
pacman --remove --noconfirm qt6-doc qt6-examples || true
## Rust gets static compiled anyway. No need to have it in the image
pacman --remove --noconfirm corrosion rust || true

# No packagekit support in discover please! We don't want discover talking about pacman things.
pacman --remove --noconfirm packagekit libpackagekit-glib || true

# Calamares
cd /tmp
git clone --depth 1 https://github.com/calamares/calamares
cmake -S calamares -B calamares/build -DCMAKE_INSTALL_PREFIX=/usr -DBUILD_TESTING=OFF -DWITH_QT6=ON
cmake --build calamares/build "-j$(nproc)"
DESTDIR=/live/ cmake --install calamares/build

cat <<- EOF > /usr/share/icons/default/index.theme
[Icon Theme]
Inherits=breeze_cursors
EOF

# WARNING: only set up os-release after the build otherwise kde-build doesn't know how to handle the system currently
cat <<- EOF > /usr/lib/os-release
NAME="KDE Linux"
PRETTY_NAME="KDE Linux"
ID=kde-linux
VERSION_ID=$IMAGE_VERSION
BUILD_ID=$CI_COMMIT_SHORT_SHA
ANSI_COLOR="38;2;61;174;233"
HOME_URL="https://linux.kde.org/"
DOCUMENTATION_URL="https://userbase.kde.org/KDE_Linux"
SUPPORT_URL="https://kde.org/support/"
BUG_REPORT_URL="https://bugs.kde.org/enter_bug.cgi?product=kde-linux"
PRIVACY_POLICY_URL="https://kde.org/privacypolicy-apps/"
LOGO=kde-symbolic
IMAGE_VERSION=$IMAGE_VERSION
# KDE Linux specific keys.
KDE_LINUX_COMMIT_SHA=$CI_COMMIT_SHA
KDE_LINUX_COMMIT_SHORT_SHA=$CI_COMMIT_SHORT_SHA
KDE_LINUX_CI_URL=$CI_PIPELINE_URL
EOF
[ -f /usr/lib/os-release ] || false
cat /usr/lib/os-release

# Fetch latest distrobox config from the kde-linux-containers repo
mkdir -p /usr/share/distrobox
curl --output /usr/share/distrobox/distrobox.conf \
  'https://invent.kde.org/api/v4/projects/19899/repository/files/distrobox.conf/raw'

# Enable samba usershare
cat <<- EOF >> /etc/samba/smb.conf
[global]
  usershare path = /var/lib/samba/usershares
  usershare max shares = 100
  usershare allow guests = yes
  usershare owner only = yes
EOF

# Set default shell as zsh for new users
sed -i 's%^SHELL=/usr/bin/bash%SHELL=/usr/bin/zsh%' /etc/default/useradd

plymouth-set-default-theme breeze-bgrt

cd /tmp
/usr/bin/_kde-linux-rebuild-efi
mv -v ./*.efi /
